from typing import Any

from app.models.utils import ClimbEnum, YesNo

STATE_MAPPING: dict[str, str] = {
    "Alabama": "AL",
    "Alaska": "AK",
    "American Samoa": "AS",
    "Arizona": "AZ",
    "Arkansas": "AR",
    "California": "CA",
    "Colorado": "CO",
    "Connecticut": "CT",
    "Delaware": "DE",
    "District of Columbia": "DC",
    "Florida": "FL",
    "Georgia": "GA",
    "Guam": "GU",
    "Hawaii": "HI",
    "Idaho": "ID",
    "Illinois": "IL",
    "Indiana": "IN",
    "Iowa": "IA",
    "Kansas": "KS",
    "Kentucky": "KY",
    "Louisiana": "LA",
    "Maine": "ME",
    "Maryland": "MD",
    "Massachusetts": "MA",
    "Michigan": "MI",
    "Minnesota": "MN",
    "Mississippi": "MS",
    "Missouri": "MO",
    "Montana": "MT",
    "Nebraska": "NE",
    "Nevada": "NV",
    "New Hampshire": "NH",
    "New Jersey": "NJ",
    "New Mexico": "NM",
    "New York": "NY",
    "North Carolina": "NC",
    "North Dakota": "ND",
    "Northern Mariana Islands": "MP",
    "Ohio": "OH",
    "Oklahoma": "OK",
    "Oregon": "OR",
    "Pennsylvania": "PA",
    "Puerto Rico": "PR",
    "Rhode Island": "RI",
    "South Carolina": "SC",
    "South Dakota": "SD",
    "Tennessee": "TN",
    "Texas": "TX",
    "Utah": "UT",
    "Vermont": "VT",
    "Virgin Islands": "VI",
    "Virginia": "VA",
    "Washington": "WA",
    "West Virginia": "WV",
    "Wisconsin": "WI",
    "Wyoming": "WY",
}


PROV_MAPPING: dict[str, str] = {
    "Newfoundland": "NL",
    "Prince Edward Island": "PE",
    "Nova Scotia": "NS",
    "New Brunswick": "NB",
    "Qu√©bec": "QC",
    "Ontario": "ON",
    "Manitoba": "MB",
    "Saskatchewan": "SK",
    "Alberta": "AB",
    "British Columbia": "BC",
    "Yukon": "YT",
    "Northwest Territories": "NT",
    "Nunavut": "NU",
}


DISTRICT_MAPPING: dict[str, str] = {
    "nc": "fnc",
    "fnc": "fnc",
    "tx": "fit",
    "fit": "fit",
    "in": "fin",
    "fin": "fin",
    "mar": "fma",
    "fma": "fma",
    "chs": "chs",
    "fim": "fim",
    "fsc": "fsc",
    "pch": "pch",
    "pnw": "pnw",
    "isr": "isr",
    "ont": "ont",
    "ne": "ne",
}


EVENT_BLACKLIST: list[str] = [
    "2004va",
    "2005va",
    "2007ga",
    "2022zhha",
    "2024nywz",
]


MATCH_BLACKLIST: list[str] = []


BREAKDOWN_MAPPINGS: dict[int, dict[str, dict[str, Any]]] = {
    2025: {
        "red_foul_points": {"path": ["red", "foulPoints"], "type": int},
        "red_auto_points": {"path": ["red", "autoPoints"], "type": int},
        "red_teleop_points": {"path": ["red", "teleopPoints"], "type": int},
        "red_endgame_points": {"path": ["red", "endGameBargePoints"], "type": int},
        "red_endgame_1": {"path": ["red", "endGameRobot1"], "type": ClimbEnum.from_string},
        "red_endgame_2": {"path": ["red", "endGameRobot2"], "type": ClimbEnum.from_string},
        "red_endgame_3": {"path": ["red", "endGameRobot3"], "type": ClimbEnum.from_string},
        "red_rp_1": {"path": ["red", "autoBonusAchieved"], "type": int},
        "red_rp_2": {"path": ["red", "coralBonusAchieved"], "type": int},
        "red_rp_3": {"path": ["red", "bargeBonusAchieved"], "type": int},
        "red_comp_1": {"path": ["red", "autoLineRobot1"], "type": YesNo.from_string},
        "red_comp_2": {"path": ["red", "autoLineRobot2"], "type": YesNo.from_string},
        "red_comp_3": {"path": ["red", "autoLineRobot3"], "type": YesNo.from_string},
        "red_comp_4": {"path": ["red", "autoReef", "tba_topRowCount"], "type": int},
        "red_comp_5": {"path": ["red", "autoReef", "tba_midRowCount"], "type": int},
        "red_comp_6": {"path": ["red", "autoReef", "tba_botRowCount"], "type": int},
        'red_comp_7': {"path": ["red", "teleopReef", "trough"], "type": int},
        "red_comp_8": {"path": ["red", "teleopReef", "tba_topRowCount"], "type": int},
        "red_comp_9": {"path": ["red", "teleopReef", "tba_midRowCount"], "type": int},
        "red_comp_10": {"path": ["red", "teleopReef", "tba_botRowCount"], "type": int},
        "red_comp_11": {"path": ["red", "teleopReef", "trough"], "type": int},
        "red_comp_12": {"path": ["red", "netAlgaeCount"], "type": int},
        "red_comp_13": {"path": ["red", "wallAlgaeCount"], "type": int},
        "red_comp_14": {"path": ["red", "coopertitionCriteriaMet"], "type": int},
        "red_comp_15": {"path": [], "type": int},
        "red_comp_16": {"path": [], "type": int},
        "red_comp_17": {"path": [], "type": int},
        "red_comp_18": {"path": [], "type": int},
        "blue_foul_points": {"path": ["blue", "foulPoints"], "type": int},
        "blue_auto_points": {"path": ["blue", "autoPoints"], "type": int},
        "blue_teleop_points": {"path": ["blue", "teleopPoints"], "type": int},
        "blue_endgame_points": {"path": ["blue", "endGameBargePoints"], "type": int},
        "blue_endgame_1": {"path": ["blue", "endGameRobot1"], "type": ClimbEnum.from_string},
        "blue_endgame_2": {"path": ["blue", "endGameRobot2"], "type": ClimbEnum.from_string},
        "blue_endgame_3": {"path": ["blue", "endGameRobot3"], "type": ClimbEnum.from_string},
        "blue_rp_1": {"path": ["blue", "autoBonusAchieved"], "type": int},
        "blue_rp_2": {"path": ["blue", "coralBonusAchieved"], "type": int},
        "blue_rp_3": {"path": ["blue", "bargeBonusAchieved"], "type": int},
        "blue_comp_1": {"path": ["blue", "autoLineRobot1"], "type": YesNo.from_string},
        "blue_comp_2": {"path": ["blue", "autoLineRobot2"], "type": YesNo.from_string},
        "blue_comp_3": {"path": ["blue", "autoLineRobot3"], "type": YesNo.from_string},
        "blue_comp_4": {"path": ["blue", "autoReef", "tba_topRowCount"], "type": int},
        "blue_comp_5": {"path": ["blue", "autoReef", "tba_midRowCount"], "type": int},
        "blue_comp_6": {"path": ["blue", "autoReef", "tba_botRowCount"], "type": int},
        'blue_comp_7': {"path": ["blue", "teleopReef", "trough"], "type": int},
        "blue_comp_8": {"path": ["blue", "teleopReef", "tba_topRowCount"], "type": int},
        "blue_comp_9": {"path": ["blue", "teleopReef", "tba_midRowCount"], "type": int},
        "blue_comp_10": {"path": ["blue", "teleopReef", "tba_botRowCount"], "type": int},
        "blue_comp_11": {"path": ["blue", "teleopReef", "trough"], "type": int},
        "blue_comp_12": {"path": ["blue", "netAlgaeCount"], "type": int},
        "blue_comp_13": {"path": ["blue", "wallAlgaeCount"], "type": int},
        "blue_comp_14": {"path": ["blue", "coopertitionCriteriaMet"], "type": int},
        "blue_comp_15": {"path": [], "type": int},
        "blue_comp_16": {"path": [], "type": int},
        "blue_comp_17": {"path": [], "type": int},
        "blue_comp_18": {"path": [], "type": int}
    }
}
